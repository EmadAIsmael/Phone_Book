type: edu
custom_name: stage2
files:
- name: src/phonebook/Main.kt
  visible: true
  text: |
    package phonebook

    fun main() {
        println("Hello, World!")
    }
  learner_created: false
- name: test/PhoneBookTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.Arrays;
    import java.util.List;

    public class PhoneBookTest extends StageTest {

        @Override
        public List<TestCase> generate() {
            return Arrays.asList(
                new TestCase().setTimeLimit(30 * 60 * 1000)
            );
        }

        @Override
        public CheckResult check(String reply, Object clue) {
            reply = reply.toLowerCase();
            return new CheckResult(
                reply.contains("start searching")
                    && reply.contains("found")
                    && reply.contains("min.")
                    && reply.contains("sec.")
                    && reply.contains("ms.")
                    && reply.contains("sorting time")
                    && reply.contains("searching time")
                    && reply.contains("linear search")
                    && reply.contains("bubble sort")
                    && reply.contains("jump search"));
        }
    }
  learner_created: false
- name: src/phonebook/LinearSearch.kt
  visible: true
  text: |
    package phonebook

    import java.io.File

    class LinearSearch(directoryFile: File, searchItemsFile: File) {
        init {
            var foundCount = 0
            val lines = directoryFile.readLines()
            val searchItems = searchItemsFile.readLines()

            println("Start searching...")
            val startTime = System.currentTimeMillis()
            for (item in searchItems) {
                for (line in lines) {
                    if (item == line.substringAfter(' ')) {
                        foundCount++
                        continue
                    }
                }
            }
            val endTime = System.currentTimeMillis()
            val timeTaken = endTime - startTime
            val (min, sec, ms) = formatMillis(timeTaken)
            println("Found $foundCount / ${searchItems.size} entries. Time taken: $min min. $sec sec. $ms ms.")
        }
    }
  learner_created: true
- name: src/phonebook/BubbleSortJumpSearch.kt
  visible: true
  learner_created: true
- name: src/phonebook/Search.kt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/86/stages/477/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 11 Feb 2021 17:02:35 UTC
record: -1
